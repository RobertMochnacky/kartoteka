version: '3.9'

services:
  db:
    image: postgres:16
    container_name: kartoteka_db
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - kartoteka_net

  web:
    build: .
    container_name: kartoteka_web
    restart: always
    depends_on:
      - db
    environment:
      FLASK_ENV: ${FLASK_ENV}
      SECRET_KEY: ${SECRET_KEY}
      DATABASE_URL: ${DATABASE_URL}
    ports:
      - "5000:5000"
    networks:
      - kartoteka_net
    command: >
      sh -c "
        flask db upgrade || (
          flask db init &&
          flask db migrate -m 'initial migration' &&
          flask db upgrade
        );
        gunicorn --bind 0.0.0.0:5000 app:app
      "
      
volumes:
  postgres_data:

networks:
  kartoteka_net:
    driver: bridge
